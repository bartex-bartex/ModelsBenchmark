{
    "KNeighborsClassifier" : {
        "n_neighbors" : [],
        "weights" : ["uniform", "distance"],
        "algorithm" : ["auto", "ball_tree", "kd_tree", "brute"],
        "leaf_size" : [],
        "p" : [],
        "metric" : [],
        "metric_params" : []
    }, 
    "DecisionTreeClassifier" : {
        "criterion" : ["gini", "entropy", "log_loss"],
        "splitter" : ["best", "random"],
        "max_depth" : [],
        "min_samples_split" : [],
        "min_samples_leaf" : [],
        "min_weight_fraction_leaf" : [],
        "max_features" : [],
        "max_leaf_nodes" : []
    },
    "RandomForestClassifier" : {
        "n_estimators" : [],
        "criterion" : ["gini", "entropy", "log_loss"],
        "max_depth" : [],
        "min_samples_split" : [],
        "min_samples_leaf" : [],
        "min_weight_fraction_leaf" : [],
        "max_features" : [],
        "max_leaf_nodes" : [],
        "min_impurity_decrease" : [],
        "bootstrap" : ["True", "False"],
        "oob_score" : ["True", "False"]
    },
    "LogisticRegression" : {
        "penalty" : ["l1", "l2", "elasticnet", "none"],
        "dual" : ["True", "False"],
        "tol" : [],
        "C" : [],
        "fit_intercept" : ["True", "False"],
        "intercept_scaling" : [],
        "class_weight" : [],
        "solver" : ["newton-cg", "lbfgs", "liblinear", "sag", "saga", "newton-cholesky"],
        "max_iter" : [],
        "multi_class" : ["auto", "ovr", "multinomial"],
        "verbose" : [],
        "warm_start" : ["True", "False"]
    },
    "Perceptron" : {
        "penalty" : ["l2", "l1", "elasticnet"],
        "alpha" : [],
        "l1_ratio" : [],
        "fit_intercept" : ["True", "False"],
        "max_iter" : [],
        "tol" : [],
        "shuffle" : ["True", "False"],
        "verbose" : [],
        "eta0" : [],
        "early_stopping" : ["True", "False"],
        "validation_fraction" : [],
        "n_iter_no_change" : [],
        "class_weight" : [],
        "warm_start" : ["True", "False"]
    },
    "SGDClassifier" : {
        "loss" : ["hinge", "log_loss", "modified_huber", "squared_hinge", "perceptron", "squared_loss", "huber", "epsilon_insensitive", "squared_epsilon_insensitive"],
        "penalty" : ["l2", "l1", "elasticnet"],
        "alpha" : [],
        "l1_ratio" : [],
        "fit_intercept" : ["True", "False"],
        "max_iter" : [],
        "tol" : [],
        "shuffle" : ["True", "False"],
        "verbose" : [],
        "epsilon" : [],
        "learning_rate" : ["optimal", "constant", "invscaling", "adaptive"],
        "eta0" : [],
        "power_t" : [],
        "early_stopping" : ["True", "False"],
        "validation_fraction" : [],
        "n_iter_no_change" : [],
        "class_weight" : [],
        "warm_start" : ["True", "False"],
        "average" : ["True", "False"]
    },
    "SVC" : {
        "C" : [],
        "kernel" : ["linear", "poly", "rbf", "sigmoid", "precomputed"],
        "degree" : [],
        "gamma" : [],
        "coef0" : [],
        "shrinking" : ["True", "False"],
        "probability" : ["True", "False"],
        "tol" : [],
        "cache_size" : [],
        "class_weight" : [],
        "verbose" : [],
        "max_iter" : [],
        "decision_function_shape" : ["ovo", "ovr"],
        "break_ties" : ["True", "False"]
    },
    "NearestCentroid" : {
        "metric" : ["euclidean", "manhattan", "chebyshev", "minkowski"],
        "shrink_threshold" : []
    },
    "GaussianProcessClassifier" : {
        "kernel" : ["RBF", "Matern", "RationalQuadratic", "ExpSineSquared", "DotProduct", "ConstantKernel", "WhiteKernel", "PairwiseKernel"],
        "optimizer" : ["fmin_l_bfgs_b", "fmin_tnc", "fmin_cobyla", "fmin_powell", "fmin_cg", "fmin_ncg", "fmin_bfgs", "fmin_cgd", "fmin_ncg", "fmin_l_bfgs_b", "fmin_tnc", "fmin_cobyla", "fmin_powell", "fmin_cg", "fmin_ncg", "fmin_bfgs", "fmin_cgd", "fmin_ncg"],
        "n_restarts_optimizer" : [],
        "max_iter_predict" : [],
        "warm_start" : ["True", "False"],
        "copy_X_train" : ["True", "False"],
        "multi_class" : ["one_vs_rest", "one_vs_one"]
    }
}